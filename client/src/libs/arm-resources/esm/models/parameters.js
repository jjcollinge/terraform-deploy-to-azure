/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export var deploymentName = {
    parameterPath: "deploymentName",
    mapper: {
        required: true,
        serializedName: "deploymentName",
        constraints: {
            MaxLength: 64,
            MinLength: 1,
            Pattern: /^[-\w\._\(\)]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var expand = {
    parameterPath: [
        "options",
        "expand"
    ],
    mapper: {
        serializedName: "$expand",
        type: {
            name: "String"
        }
    }
};
export var filter = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var operationId = {
    parameterPath: "operationId",
    mapper: {
        required: true,
        serializedName: "operationId",
        type: {
            name: "String"
        }
    }
};
export var parentResourcePath = {
    parameterPath: "parentResourcePath",
    mapper: {
        required: true,
        serializedName: "parentResourcePath",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1,
            Pattern: /^[-\w\._\(\)]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var resourceId = {
    parameterPath: "resourceId",
    mapper: {
        required: true,
        serializedName: "resourceId",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var resourceName = {
    parameterPath: "resourceName",
    mapper: {
        required: true,
        serializedName: "resourceName",
        type: {
            name: "String"
        }
    }
};
export var resourceProviderNamespace = {
    parameterPath: "resourceProviderNamespace",
    mapper: {
        required: true,
        serializedName: "resourceProviderNamespace",
        type: {
            name: "String"
        }
    }
};
export var resourceType = {
    parameterPath: "resourceType",
    mapper: {
        required: true,
        serializedName: "resourceType",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var sourceResourceGroupName = {
    parameterPath: "sourceResourceGroupName",
    mapper: {
        required: true,
        serializedName: "sourceResourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1,
            Pattern: /^[-\w\._\(\)]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
export var tagName = {
    parameterPath: "tagName",
    mapper: {
        required: true,
        serializedName: "tagName",
        type: {
            name: "String"
        }
    }
};
export var tagValue = {
    parameterPath: "tagValue",
    mapper: {
        required: true,
        serializedName: "tagValue",
        type: {
            name: "String"
        }
    }
};
export var top = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
//# sourceMappingURL=parameters.js.map