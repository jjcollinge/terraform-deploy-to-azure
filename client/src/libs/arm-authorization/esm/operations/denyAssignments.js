/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "ms-rest-js";
import * as Mappers from "../models/denyAssignmentsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a DenyAssignments. */
var DenyAssignments = /** @class */ (function () {
    /**
     * Create a DenyAssignments.
     * @param {AuthorizationManagementClientContext} client Reference to the service client.
     */
    function DenyAssignments(client) {
        this.client = client;
    }
    DenyAssignments.prototype.listForResource = function (resourceGroupName, resourceProviderNamespace, parentResourcePath, resourceType, resourceName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            resourceProviderNamespace: resourceProviderNamespace,
            parentResourcePath: parentResourcePath,
            resourceType: resourceType,
            resourceName: resourceName,
            options: options
        }, listForResourceOperationSpec, callback);
    };
    DenyAssignments.prototype.listForResourceGroup = function (resourceGroupName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            options: options
        }, listForResourceGroupOperationSpec, callback);
    };
    DenyAssignments.prototype.list = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listOperationSpec, callback);
    };
    DenyAssignments.prototype.get = function (scope, denyAssignmentId, options, callback) {
        return this.client.sendOperationRequest({
            scope: scope,
            denyAssignmentId: denyAssignmentId,
            options: options
        }, getOperationSpec, callback);
    };
    DenyAssignments.prototype.getById = function (denyAssignmentId, options, callback) {
        return this.client.sendOperationRequest({
            denyAssignmentId: denyAssignmentId,
            options: options
        }, getByIdOperationSpec, callback);
    };
    DenyAssignments.prototype.listForScope = function (scope, options, callback) {
        return this.client.sendOperationRequest({
            scope: scope,
            options: options
        }, listForScopeOperationSpec, callback);
    };
    DenyAssignments.prototype.listForResourceNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listForResourceNextOperationSpec, callback);
    };
    DenyAssignments.prototype.listForResourceGroupNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listForResourceGroupNextOperationSpec, callback);
    };
    DenyAssignments.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    DenyAssignments.prototype.listForScopeNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listForScopeNextOperationSpec, callback);
    };
    return DenyAssignments;
}());
export { DenyAssignments };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listForResourceOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/denyAssignments",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.resourceProviderNamespace,
        Parameters.parentResourcePath,
        Parameters.resourceType,
        Parameters.resourceName
    ],
    queryParameters: [
        Parameters.apiVersion2,
        Parameters.filter
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listForResourceGroupOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/denyAssignments",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName
    ],
    queryParameters: [
        Parameters.apiVersion2,
        Parameters.filter
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/providers/Microsoft.Authorization/denyAssignments",
    urlParameters: [
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2,
        Parameters.filter
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}",
    urlParameters: [
        Parameters.scope,
        Parameters.denyAssignmentId0
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignment
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getByIdOperationSpec = {
    httpMethod: "GET",
    path: "{denyAssignmentId}",
    urlParameters: [
        Parameters.denyAssignmentId1
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignment
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listForScopeOperationSpec = {
    httpMethod: "GET",
    path: "{scope}/providers/Microsoft.Authorization/denyAssignments",
    urlParameters: [
        Parameters.scope
    ],
    queryParameters: [
        Parameters.apiVersion2,
        Parameters.filter
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listForResourceNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listForResourceGroupNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listForScopeNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DenyAssignmentListResult
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=denyAssignments.js.map